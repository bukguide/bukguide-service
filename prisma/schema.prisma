generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model blog {
  id              Int               @id @default(autoincrement())
  title           String
  content         String
  key_word        String?
  user_id         Int
  user_info       user_info         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  blog_tag        blog_tag[]        @ignore
  blog_type_toure blog_type_toure[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model blog_tag {
  blog_id Int
  tag_id  Int
  blog    blog @relation(fields: [blog_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tag     tag  @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model blog_type_toure {
  blog_id       Int
  type_toure_id Int
  blog          blog       @relation(fields: [blog_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  type_toure    type_toure @relation(fields: [type_toure_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@ignore
}

model language {
  id            Int             @id @default(autoincrement())
  name          Int
  user_language user_language[] @ignore
}

model localtion {
  id            Int             @id @default(autoincrement())
  name          String
  user_location user_location[] @ignore
}

model permission {
  id        Int         @id @default(autoincrement())
  role      String      @db.VarChar
  user_info user_info[]
}

model tag {
  id       Int        @id @default(autoincrement())
  name     String
  blog_tag blog_tag[] @ignore
}

model type_toure {
  id              Int               @id @default(autoincrement())
  name            Int
  blog_type_toure blog_type_toure[] @ignore
  user_type_toure user_type_toure[] @ignore
}

model user_info {
  id              Int               @id @default(autoincrement())
  name            String?
  emirates_id     String?
  license_no      String?           @db.VarChar
  expiry_date     DateTime?         @db.Date
  permission_id   Int
  email           String?           @db.VarChar
  number_phone    String?           @db.VarChar
  created_at      DateTime?         @db.Timestamp(6)
  updated_at      DateTime?         @db.Timestamp(6)
  password        String?
  blog            blog[]
  permission      permission        @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_language   user_language[]   @ignore
  user_location   user_location[]   @ignore
  user_type_toure user_type_toure[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user_language {
  user_id     Int
  language_id Int
  language    language  @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_info   user_info @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user_location {
  user_id     Int
  location_id Int
  localtion   localtion @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_info   user_info @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user_type_toure {
  user_id       Int
  type_toure_id Int
  type_toure    type_toure @relation(fields: [type_toure_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_info     user_info  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@ignore
}
